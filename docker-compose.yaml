services:
  order-service:
    container_name: order_service
    build:
      context: .
      dockerfile: Dockerfile
      tags:
        - caricciy/order-service:latest
    ports:
      - "8080:8080"
      - "8000:8000"
      - "50051:50051"
    networks:
      - clean_architecture_network
    depends_on:
      mysql:
        condition: service_healthy

  mysql:
    image: mysql:8.0
    container_name: mysql_clean_architecture
    restart: always
    environment:
      MYSQL_PASSWORD: root
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: orders
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - clean_architecture_network
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      start_period: 10s
      interval: 10s
      timeout: 10s
      retries: 3

  migrate:
    image: migrate/migrate
    restart: no
    volumes:
      - ./internal/sql/migrations:/migrations
    command: [ "-path", "/migrations", "-database",  "mysql://root:root@tcp(mysql:3306)/orders", "-verbose", "up" ]
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - clean_architecture_network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq-3
    restart: always
    ports:
      - "5673:5672"
      - "15673:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - clean_architecture_network

volumes:
  mysql_data:
    driver: local

networks:
  clean_architecture_network:
    driver: bridge